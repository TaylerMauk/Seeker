<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="TitlebarButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource TitlebarTextLightBrush}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="Transparent" BorderThickness="0" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Focusable="False" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource TitlebarTextLightBrush}" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonMouseOverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource TitlebarTextLightBrush}" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonPressedBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource TextDarkBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TitlebarCloseButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource TitlebarButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="Transparent" BorderThickness="0" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Focusable="False" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource TitlebarCloseButtonMouseOverBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource TitlebarTextLightBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource TitlebarCloseButtonPressedBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource TitlebarTextLightBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource TextLightBrush}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{DynamicResource BackgroundLightBrush}" BorderBrush="{StaticResource BackgroundDarkBrush}" BorderThickness="0 0 0 2" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Focusable="False" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonMouseOverBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextLightBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonPressedBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextLightBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource BackgroundDarkBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextDarkBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabSelectorButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MainButtonStyle}">
        <Setter Property="Foreground" Value="{DynamicResource TextLightBrush}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{DynamicResource BackgroundDarkBrush}" BorderThickness="0" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Focusable="False" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonMouseOverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonPressedBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource BackgroundLightBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainRadioButtonStyle" TargetType="{x:Type RadioButton}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="{DynamicResource BackgroundLightBrush}">
                        <BulletDecorator.Bullet>
                            <Grid Height="16" Width="16" Margin="0 0 0 5">
                                <Border Name="RadioOuter" Background="Transparent" BorderBrush="{DynamicResource BackgroundDarkBrush}" BorderThickness="2" CornerRadius="2" />
                                <Border Name="RadioMark" Background="{DynamicResource TextLightBrush}" CornerRadius="0" Margin="4" Visibility="Hidden" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <TextBlock Style="{DynamicResource MainTextStyle}" Margin="5 0 0 0">
                            <ContentPresenter />
                        </TextBlock>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="RadioMark" Property="Visibility" Value="Visible" />
                            <Setter TargetName="RadioOuter" Property="BorderBrush" Value="{DynamicResource TextLightBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsChecked" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="RadioOuter" Property="BorderBrush" Value="{DynamicResource SelectionHighlightBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
